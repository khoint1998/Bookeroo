version: 2.1

orbs:
  node: circleci/node@4.1
  maven: circleci/maven@1.2.0
  docker: circleci/docker@1.7.0
  # https://circleci.com/developer/orbs/orb/circleci/aws-ecr
  aws-ecr: circleci/aws-ecr@7.2.0

jobs:
  test-build-container-node:
    docker:
      - image: cimg/node:12.19.0

    executor: docker/docker
    working_directory: ~/app

    steps:
      - setup_remote_docker
      - checkout
      - run: cd FrontEnd/myfirstapp && npm install
      - run:
          name: Test Frontend with Testing Library
          command: |
            cd FrontEnd/myfirstapp && npm test
      - run:
          name: Build Frontend Docker Image
          command: |
            cd FrontEnd/myfirstapp && docker-compose -f docker-compose.dev.yml build

  test-build-container-login:
    docker:
      - image: cimg/openjdk:11.0

      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: pass
          MYSQL_DATABASE: bookeroo

    executor: docker/docker
    working_directory: ~/app

    steps:
      - setup_remote_docker
      - checkout
      - run: cd BackEnd/loginmicroservices && mvn -B -DskipTests clean package
      - run:
          name: Test Backend - loginservices
          command: |
            cd BackEnd/loginmicroservices && mvn test
      - run:
          name: Wait for Database service on the TCP protocol
          command: |
            dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Build Backend-Login Docker Image
          command: |
            cd BackEnd/loginmicroservices && docker build -t loginservices:latest .

  test-build-container-book:
    docker:
      - image: cimg/openjdk:11.0
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: pass
          MYSQL_DATABASE: bookeroo

    executor: docker/docker
    working_directory: ~/app

    steps:
      - setup_remote_docker
      - checkout
      - run: cd BackEnd/bookservices && mvn -B -DskipTests clean package
      - run:
          name: Test Backend - bookservices
          command: |
            cd BackEnd/bookservices && mvn test
      - run:
          name: Wait for Database service on the TCP protocol
          command: |
            dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Build Backend-Book Docker Image
          command: |
            cd BackEnd/bookservices && docker build -t bookservices:latest .

  test-build-container-order:
    docker:
      - image: cimg/openjdk:11.0
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: pass
          MYSQL_DATABASE: bookeroo

    executor: docker/docker
    working_directory: ~/app

    steps:
      - setup_remote_docker
      - checkout
      - run: cd BackEnd/orderservices && mvn -B -DskipTests clean package
      - run:
          name: Test Backend - orderservices
          command: |
            cd BackEnd/orderservices && mvn test
      - run:
          name: Wait for Database service on the TCP protocol
          command: |
            dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Build Backend-Book Docker Image
          command: |
            cd BackEnd/orderservices && docker build -t bookservices:latest .

workflows:
  sample:
    jobs:
      - test-build-container-node

      - test-build-container-login

      - test-build-container-book

      - test-build-container-order

      # Envs: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION, AWS_ECR_ACCOUNT_URL
      - aws-ecr/build-and-push-image:
          repo: sept
          tag: "latest,front-prod-v0.1.${CIRCLE_BUILD_NUM}"
          dockerfile: Dockerfile.prod
          path: ./FrontEnd/myfirstapp
          requires:
            - test-build-container-node
          filters:
            branches:
              only:
                - master
